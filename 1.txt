select * from users;

CREATE TABLE users (
    user_id serial PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	surname VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(60) NOT NULL,
    created_at TIMESTAMP NOT NULL
);


CREATE TABLE airlines (
    airline_id serial PRIMARY KEY,
    airline_name VARCHAR(100) NOT NULL
);

CREATE TABLE cities (
    city_id serial PRIMARY KEY,
    city_name VARCHAR(50) NOT NULL,
    country_name VARCHAR(50) NOT NULL
);


CREATE TABLE seats (
    seat_id serial PRIMARY KEY,
    seat_number VARCHAR(5) NOT NULL,
    seat_class VARCHAR(20) NOT NULL
);

CREATE TABLE flights (
    flight_id serial PRIMARY KEY,
    flight_number VARCHAR(10) NOT NULL,
    departure_city_id INT REFERENCES cities(city_id),
    arrival_city_id INT REFERENCES cities(city_id),
    departure_time TIMESTAMP NOT NULL,
    arrival_time TIMESTAMP NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    airline_id INT REFERENCES airlines(airline_id)
);



CREATE TABLE passengers (
    passenger_id serial PRIMARY KEY,
    ticket_id INT REFERENCES tickets(ticket_id),
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    date_of_birth DATE NOT NULL,
    passport_number VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS tickets (
    ticket_id SERIAL PRIMARY KEY,
    flight_id INT NOT NULL,
    user_id INT NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    birthdate DATE NOT NULL,
    document_number VARCHAR(20) NOT NULL,
    expiry_date DATE NOT NULL,
    iin VARCHAR(12) NOT NULL,
    phone_number VARCHAR(15) NOT NULL,
    email VARCHAR(50) NOT NULL,
	isPayed boolean,
    FOREIGN KEY (flight_id) REFERENCES flights(flight_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);